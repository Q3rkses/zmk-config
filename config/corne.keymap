/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
/* ──────────────── Macros for Layer 3 ───────────────── */
        macros {
         /* Shifted keys (always send Shift + key) */
         shifted_minus: macro {
             sequence = < &kp LSHFT &kp MINUS >;
         };
         shifted_equal: macro {
             sequence = < &kp LSHFT &kp EQUAL >;
         };
         shifted_lbrace: macro {
             sequence = < &kp LSHFT &kp LBRACE >;
         };
         shifted_rbrace: macro {
             sequence = < &kp LSHFT &kp RBRACE >;
         };
         shifted_bslash: macro {
             sequence = < &kp LSHFT &kp BSLH >;
         };
         shifted_grave: macro {
             sequence = < &kp LSHFT &kp GRAVE >;
         };
         shifted_fslh: macro {
             sequence = < &kp LSHFT &kp FSLH >;
         };
        
         /* Control + arrow (jump words) */
         longjmp_left: macro {
             sequence = < &kp LCTRL &kp LEFT >;
         };
         longjmp_down: macro {
             sequence = < &kp LCTRL &kp DOWN >;
         };
         longjmp_up: macro {
             sequence = < &kp LCTRL &kp UP >;
         };
         longjmp_right: macro {
             sequence = < &kp LCTRL &kp RIGHT >;
         };
};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ALT  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | BSPC |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp ESC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ALT
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp BSPC
                        >;
                };

         lower_layer {  /* Layer 1: num + func */
 // -----------------------------------------------------------------------------------------
 // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | ESC  |
 // | CTRL |     |     |     |     |     |   |  ←  |  ↓  |  ↑  |  →  |     |      |
 // | SHFT | F1  | F2  | F3  | F4  | F5  |   |  F6 |  F7 |  F8 |  F9 | F10 |  ALT |
 //                    | GUI |     | SPC |   | ENT |     | BSPC |
             bindings = <
  &kp  TAB   &kp  N1    &kp  N2    &kp  N3    &kp  N4    &kp  N5    &kp  N6    &kp  N7    &kp  N8    &kp  N9    &kp  N0    &kp  ESC
  &kp  LCTRL &trans     &trans     &trans     &trans     &trans     &kp  LEFT  &kp  DOWN  &kp  UP    &kp  RIGHT &trans     &trans
  &kp  LSHFT &kp  F1    &kp  F2    &kp  F3    &kp  F4    &kp  F5    &kp  F6    &kp  F7    &kp  F8    &kp  F9    &kp  F10   &kp ALT
                       &kp  LGUI &trans     &kp  SPACE &kp  RET   &trans     &kp  BSPC
             >;
         };

 longjmp_layer {  /* Layer 3: longjmp */
 // -----------------------------------------------------------------------------------------
 // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | ESC  |
 // | CTRL |  -  |  =  |  {  |  }  |  \  |   |  ←  |  ↓  |  ↑  |  →  |     |      |
 // | SHFT |  -  |  =  |  {  |  }  |  \  |   |  `  |  `  |  /  |  /  |     |  ALT |
 //                    | GUI | LWR | SPC |   | ENT | RSE  | BSPC |
             bindings = <
  &kp    TAB           &kp    N1           &kp    N2           &kp    N3           &kp    N4           &kp    N5

  &kp    LCTRL         &shifted_minus      &shifted_equal      &shifted_lbrace     &shifted_rbrace     &shifted_bslash
  &longjmp_left      &longjmp_down       &longjmp_up         &longjmp_right      &kp    N0           &kp    ESC

  &kp    LSHFT        &shifted_minus      &shifted_equal      &shifted_lbrace     &shifted_rbrace     &shifted_bslash
  &shifted_grave     &shifted_grave      &shifted_fslh       &shifted_fslh       &trans             &kp ALT

                &kp    LGUI  &mo     1   &kp    SPACE &kp    RET  &mo     2   &kp    BSPC
                        >;
                };
        };
};

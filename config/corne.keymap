/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    /* ─────────────── Macros (used on Layer 2) ─────────────── */
    macros {
        /* Shift‑with‑key pairs */
        shifted_minus: shifted_minus_macro {
            bindings = < &kp LSHFT &kp MINUS >;
        };
        shifted_equal: shifted_equal_macro {
            bindings = < &kp LSHFT &kp EQUAL >;
        };
        shifted_lbrace: shifted_lbrace_macro {
            bindings = < &kp LSHFT &kp LBRACE >;
        };
        shifted_rbrace: shifted_rbrace_macro {
            bindings = < &kp LSHFT &kp RBRACE >;
        };
        shifted_bslash: shifted_bslash_macro {
            bindings = < &kp LSHFT &kp BSLH >;
        };
        shifted_grave: shifted_grave_macro {
            bindings = < &kp LSHFT &kp GRAVE >;
        };
        shifted_fslh: shifted_fslh_macro {
            bindings = < &kp LSHFT &kp FSLH >;
        };

        /* Ctrl+Arrow word‑jump helpers */
        longjmp_left: longjmp_left_macro {
            bindings = < &kp LCTRL &kp LEFT >;
        };
        longjmp_down: longjmp_down_macro {
            bindings = < &kp LCTRL &kp DOWN >;
        };
        longjmp_up: longjmp_up_macro {
            bindings = < &kp LCTRL &kp UP >;
        };
        longjmp_right: longjmp_right_macro {
            bindings = < &kp LCTRL &kp RIGHT >;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* ───────── Layer 0: Base ───────── */
        default_layer {
            bindings = <
  &kp TAB   &kp Q    &kp W    &kp E    &kp R    &kp T    &kp Y    &kp U    &kp I    &kp O    &kp P    &kp ESC
  &kp LCTRL &kp A    &kp S    &kp D    &kp F    &kp G    &kp H    &kp J    &kp K    &kp L    &kp SEMI &kp SQT
  &kp LSHFT &kp Z    &kp X    &kp C    &kp V    &kp B    &kp N    &kp M    &kp COMMA &kp DOT &kp FSLH &kp LALT
                      &kp LGUI &mo 1   &kp SPACE &kp RET &mo 2   &kp BSPC
            >;
        };

        /* ───────── Layer 1: Num + Func ───────── */
        lower_layer {
            bindings = <
  &kp TAB   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5   &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp ESC
  &kp LCTRL &trans   &trans   &trans   &trans   &trans   &kp LEFT &kp DOWN &kp UP  &kp RIGHT &trans   &trans
  &kp LSHFT &kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6   &kp F7   &kp F8  &kp F9   &kp F10  &kp LALT
                      &kp LGUI &trans &kp SPACE &kp RET &trans &kp BSPC
            >;
        };

        /* ───────── Layer 2: Long‑Jmp / Shifted layer ───────── */
        longjmp_layer {
            bindings = <
  /* top‑row numerics */
  &kp TAB   &kp N1   &kp N2   &kp N3   &kp N4   &kp N5   &kp N6   &kp N7   &kp N8   &kp N9   &kp N0   &kp ESC
  /* middle‑row symbols + Ctrl‑arrows */
  &kp LCTRL &mac shifted_minus &mac shifted_equal &mac shifted_lbrace &mac shifted_rbrace &mac shifted_bslash &mac longjmp_left &mac longjmp_down &mac longjmp_up &mac longjmp_right &trans &trans
  /* bottom‑row shifted + extra */
  &kp LSHFT &mac shifted_minus &mac shifted_equal &mac shifted_lbrace &mac shifted_rbrace &mac shifted_bslash &mac shifted_grave &mac shifted_grave &mac shifted_fslh &mac shifted_fslh &trans &kp LALT
                      &kp LGUI &trans &kp SPACE &kp RET &trans &kp BSPC
            >;
        };
    };
};